name: CI
on:
  push:
    branches:
      - "*"
    tags:
      - "*"

jobs:
  docker:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        ubuntu: ["noble", "plucky"]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: prefix=${{ matrix.ubuntu }}-
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Source versions
        run: |
          source builders/versions
          echo "QT_VER=${QT_VER}" >> $GITHUB_ENV
          echo "QT_INSTALLER_VER=${QT_INSTALLER_VER}" >> $GITHUB_ENV
      - name: Build renderwindow image
        uses: docker/build-push-action@v5
        with:
          context: builders/
          file: builders/Linux/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          target: renderwindow
          secrets: |
            "qtaccount=${{ secrets.QTACCOUNT }}"
          build-args: |
            "QT_VER=${{ env.QT_VER }}"
            "QT_INSTALLER_VER=${{ env.QT_INSTALLER_VER }}"
            "UBUNTU=${{ matrix.ubuntu }}"
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache,mode=max

  linux:
    runs-on: ubuntu-24.04
    needs: docker
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        ubuntu: ["noble", "plucky"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build renderwindow
        run: |
          export TARGET=opengl
          export UBUNTU=${{ matrix.ubuntu }}
          export TAG=ghcr.io/rectalogic/renderwindow:${UBUNTU}-${{ github.ref_name }}
          builders/Linux/docker-run.sh
          builders/Linux/docker-run.sh /renderwindow/builders/renderwindow-test.sh --verbose
      - name: Build renderwindow vulkan
        if: matrix.ubuntu == 'noble'
        run: |
          export TARGET=vulkan
          export UBUNTU=${{ matrix.ubuntu }}
          export TAG=ghcr.io/rectalogic/renderwindow:${UBUNTU}-${{ github.ref_name }}
          builders/Linux/docker-run.sh
          builders/Linux/docker-run.sh /renderwindow/builders/renderwindow-test.sh --verbose
      - name: Archive
        id: archive
        if: github.ref_type == 'tag' && matrix.ubuntu == 'noble'
        run: |
          ARCHIVE=renderwindow-${{ matrix.ubuntu }}-${{ github.ref_name }}.tgz
          tar czvf $ARCHIVE -C build/Linux/Release/installed/qml .
          echo "file=$ARCHIVE" >> $GITHUB_OUTPUT
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag' && matrix.ubuntu == 'noble'
        with:
          files: ${{ steps.archive.outputs.file }}

  macos:
    runs-on: macos-15
    permissions:
      contents: write
    env:
      XCODE_VER: "16.3"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Xcode
        run: |
          sudo xcode-select -s "/Applications/Xcode_${XCODE_VER}.app"
      - name: Restore cached installation
        uses: actions/cache/restore@v4
        id: restore-cache
        with:
          path: build/Darwin/installed
          key: ${{ runner.os }}-${{ hashFiles('builders/versions') }}-${{ hashFiles('builders/Darwin/install-qt6.sh') }}-${{ env.XCODE_VER }}
      - name: Build installation
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/Library/Application\ Support/Qt
          echo "${{ secrets.QTACCOUNT }}" > ~/Library/Application\ Support/Qt/qtaccount.ini
          builders/Darwin/install-qt6.sh
      - name: Save cached installation
        uses: actions/cache/save@v4
        if: steps.restore-cache.outputs.cache-hit != 'true'
        with:
          path: build/Darwin/installed
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
      - name: Build renderwindow
        run: |
          builders/renderwindow-build.sh
          builders/renderwindow-test.sh --verbose
      - name: Archive
        id: archive
        if: github.ref_type == 'tag'
        run: |
          ARCHIVE=renderwindow-macos-${{ github.ref_name }}.zip
          env -C build/Darwin/Release/installed/qml zip -r "$PWD/$ARCHIVE" .
          echo "file=$ARCHIVE" >> $GITHUB_OUTPUT
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: ${{ steps.archive.outputs.file }}

  lint:
    runs-on: ubuntu-24.04
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: lint
        run: |
          export UBUNTU=noble
          export TAG=ghcr.io/rectalogic/renderwindow:${UBUNTU}-${{ github.ref_name }}
          builders/Linux/docker-run.sh /renderwindow/builders/Linux/lint.sh
